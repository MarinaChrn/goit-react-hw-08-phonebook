{"version":3,"file":"static/js/673.c8d2638b.chunk.js","mappings":"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","sources":["components/GlobalStyles.styled.js","components/contactForm/ContactForm.styled.js","components/contactForm/ContactForm.js","components/filter/FilterContacts.styled.js","components/filter/FilterContacts.js","components/contactElement/ContactElement.styled.js","components/contactElement/ContactElement.js","components/contactList/ContactList.styled.js","components/contactList/ContactList.js","pages/ContactsPage.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Layout = styled.div`\n    margin-left: 0;\n`","import { Form as FormikForm, Field as FormikField } from \"formik\";\nimport styled from \"styled-components\";\n\nexport const Form = styled(FormikForm)`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    width: 300px;\n`\n\nexport const StyledLabel = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n`\n\nexport const Field = styled(FormikField)`\n    padding: 10px 8px;\n    &:hover, &:focus {\n        border-color: #C2C4FF;\n    }\n`\n\nexport const StyledButton = styled.button`\n    width: 100px;\n    height: 30px;\n    cursor: pointer;\n    &:hover, &:focus {\n        background-color: #C2C4FF;\n    }\n`","import { Formik } from \"formik\"\nimport { Form, StyledLabel, Field, StyledButton } from \"./ContactForm.styled\"\nimport { nanoid } from 'nanoid'\nimport { addContact } from \"operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const ContactForm = () => {\n    const contacts = useSelector(state => state.contacts.items)\n    const dispatch = useDispatch();\n\n    const handleAddContact = (contact, actions, i) => {\n        if (contacts.find(element => contact.name===element.name)) {\n            alert(`${contact.name} is alredy in contacts`)\n        } else {\n            dispatch(addContact(contact))\n        }\n    }\n\n    return (\n       <Formik \n        initialValues={{\n            name:'',\n            number:'',\n        }}\n        onSubmit={(contact, actions)=> {\n            contact.id = nanoid();\n            handleAddContact({...contact});\n            actions.resetForm();\n        }}\n       >\n        <Form>\n            <StyledLabel>\n                Name\n                <Field name=\"name\"\n                pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n                placeholder=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required/>\n            </StyledLabel>\n            <StyledLabel>\n                Number\n                <Field type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                placeholder=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required/>\n            </StyledLabel>\n            <StyledButton type=\"submit\">Submit</StyledButton>\n        </Form>\n\n       </Formik>\n    )\n}","import styled from \"styled-components\";\n\nexport const StyledFilter = styled.input`\n    padding: 10px 8px;\n    &:hover, &:focus {\n        border-color: #C2C4FF;\n    }\n`","import { StyledFilter } from \"./FilterContacts.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSearch } from \"redux/filter/filterSlice\";\n;\n\nexport const FilterContacts = ()=> {\n    const dispatch = useDispatch();\n\n    const searchByName = (name) => {\n        dispatch(changeSearch(name.toLowerCase()))\n    }\n\n    return (\n        <div>\n            <h3>Find contacts by name</h3>\n            <StyledFilter type=\"text\" placeholder=\"Write name\" onChange={(event)=>{searchByName(event.target.value)}}/>\n        </div>\n    )\n}\n","import styled from \"styled-components\"\n\nexport const StyledElement = styled.li`\n    display: flex;\n    gap: 20px;\n    align-items: center;\n`\n\nexport const StyledButton = styled.button`\n    width: 100px;\n    height: 30px;\n    cursor: pointer;\n    &:hover, &:focus {\n        background-color: #C2C4FF;\n    }\n    \n    \n`","import { StyledButton, StyledElement } from \"./ContactElement.styled\";\nimport PropTypes from 'prop-types';\nimport { useDispatch} from \"react-redux\";\nimport { deleteContact } from \"operations\";\n\nexport const ContactElement = ({contact})=> {\n    \n    const dispatch = useDispatch();\n\n    const handleDeleteContact =(id)=>{\n        dispatch(deleteContact(id));\n    }\n\n        return (\n            <StyledElement id={contact.id}>\n                <p>{contact.name}</p>\n                <p>{contact.number}</p>\n                <StyledButton type=\"button\" onClick={(event)=>{handleDeleteContact(contact.id)}}>Delete</StyledButton>\n            </StyledElement>\n        )\n}\n\n\nContactElement.propTypes = {\n    contact: PropTypes.object.isRequired,\n}","import styled from \"styled-components\";\n\nexport const StyledList = styled.ul`\n    padding-inline-start: 0px;\n`","import { ContactElement } from \"components/contactElement/ContactElement\";\nimport { StyledList } from \"./ContactList.styled\";\nimport PropTypes from 'prop-types';\nimport { useSelector } from \"react-redux\";\n\nexport const ContactList =({contacts})=> {\n    const isLoading = useSelector(state=> state.contacts.isLoading)\n    const isError = useSelector(state=> state.contacts.error)\n\n    if (isLoading===true) {\n        return (\n            <p>Loading...</p>\n        )\n    }\n\n    if (isLoading!==true&&isError===null&&contacts) {\n    return (\n        <StyledList>\n            {contacts.map((contact) => (\n                <ContactElement contact={contact} key={contact.id}/>\n            ))}\n        </StyledList>\n    )}\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.array.isRequired,\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'operations';\nimport { Layout } from 'components/GlobalStyles.styled';\nimport { ContactForm } from 'components/contactForm/ContactForm';\nimport { FilterContacts } from 'components/filter/FilterContacts';\nimport { ContactList } from 'components/contactList/ContactList';\n\nexport default function ContactsPage() {\n   const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.searchValue)\n  const contacts = useSelector(state => state.contacts.items)\n\n  const getVisibleContacts=()=>{\n      return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter))\n  };\n\n  useEffect(()=> {\n    dispatch(fetchContacts())\n  },[dispatch])\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm/>\n      <h2>Contacts</h2>\n      <FilterContacts/>\n      <ContactList contacts={getVisibleContacts()}/> \n    </Layout>\n  );\n}"],"names":["Layout","styled","Form","FormikForm","StyledLabel","Field","FormikField","StyledButton","ContactForm","contacts","useSelector","state","items","dispatch","useDispatch","initialValues","name","number","onSubmit","contact","actions","id","nanoid","i","find","element","alert","addContact","handleAddContact","resetForm","pattern","placeholder","required","type","StyledFilter","FilterContacts","onChange","event","target","value","changeSearch","toLowerCase","StyledElement","ContactElement","onClick","deleteContact","StyledList","ContactList","isLoading","isError","error","map","ContactsPage","filter","searchValue","useEffect","fetchContacts","Helmet","includes"],"sourceRoot":""}